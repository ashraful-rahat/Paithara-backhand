"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const dotenv_1 = __importDefault(require("dotenv"));
const mongoose_1 = __importDefault(require("mongoose"));
const config_1 = __importDefault(require("./config"));
const app_1 = __importDefault(require("./app"));
dotenv_1.default.config();
// Get the DB_URL from config (loaded from .env)
const DB_URL = config_1.default.database_url;
// ржбрзЗржЯрж╛ржмрзЗржЬ ржХрж╛ржирзЗржХрж╢ржи ржлрж╛ржВрж╢ржи
const connectDB = () => __awaiter(void 0, void 0, void 0, function* () {
    try {
        yield mongoose_1.default.connect(DB_URL);
        console.log('тЬЕ Connected to MongoDB');
    }
    catch (error) {
        console.error('тЭМ MongoDB connection error:', error);
        // ржХрж╛ржирзЗржХрж╢ржи ржлрзЗрж▓ ржХрж░рж▓рзЗ ржЕрзНржпрж╛ржк ржмржирзНржз ржХрж░рзЗ ржжрзЗржмрзЗ
        process.exit(1);
    }
});
// рж▓рзЛржХрж╛рж▓ ржмрж╛ ржкрзНрж░рзЛржбрж╛ржХрж╢ржи ржкрж░рж┐ржмрзЗрж╢рзЗрж░ ржЬржирзНржп рж╕рж╛рж░рзНржнрж╛рж░ ржЪрж╛рж▓рзБ
// ржПржЯрж┐ рж▓рзЛржХрж╛рж▓ ржбрзЗржнрзЗрж▓ржкржорзЗржирзНржЯрзЗрж░ ржЬржирзНржп, Vercel ржПрж░ ржЬржирзНржп ржирзЯред
if (process.env.NODE_ENV !== 'production') {
    const PORT = config_1.default.port || 5000;
    connectDB().then(() => {
        app_1.default.listen(PORT, () => {
            console.log(`ЁЯЪА Server is running at http://localhost:${PORT}`);
        });
    });
}
// Vercel-ржПрж░ ржЬржирзНржп ржПржХрзНрж╕ржкрзНрж░рзЗрж╕ ржЕрзНржпрж╛ржк ржПржХрзНрж╕ржкрзЛрж░рзНржЯ
// ржПржЯрж┐ Vercel ржПрж░ ржкрзНрж░ржзрж╛ржи ржПржирзНржЯрзНрж░рж┐ ржкржпрж╝рзЗржирзНржЯ
exports.default = app_1.default;
